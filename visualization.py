# -*- coding: utf-8 -*-
"""Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UQ0B62s7LlKHjWy66nJ1n2RnNQ-PkNeC
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the data
df1 = pd.read_csv('test.csv')
df2 = pd.read_csv('train.csv')

# Combine the two dataframes
df = pd.concat([df1, df2], ignore_index=True)

# Check for missing values
print(df.isnull().sum())

# Fill in missing values with the mean
df = df.fillna(df.mean())

# Check the data types
print(df.dtypes)

"""Visualizations"""

# 1. Scatter plot of x vs y
plt.figure(figsize=(10, 6))
plt.scatter(df['x'], df['y'])
plt.xlabel('x')
plt.ylabel('y')
plt.title('Scatter Plot of x vs y')
plt.show()

# 2. Histogram of x
plt.figure(figsize=(10, 6))
plt.hist(df['x'], bins=20)
plt.xlabel('x')
plt.ylabel('Frequency')
plt.title('Histogram of x')
plt.show()

# 3. Histogram of y
plt.figure(figsize=(10, 6))
plt.hist(df['y'], bins=20)
plt.xlabel('y')
plt.ylabel('Frequency')
plt.title('Histogram of y')
plt.show()

# 4. Correlation matrix
plt.figure(figsize=(10, 6))
sns.heatmap(df.corr(), annot=True, cmap='YlOrRd')
plt.title('Correlation Matrix')
plt.show()

# 5. Pair plot
plt.figure(figsize=(10, 6))
sns.pairplot(df)
plt.title('Pair Plot')
plt.show()

# 6. Box plot of x vs y
plt.figure(figsize=(10, 6))
sns.boxplot(x='x', y='y', data=df)
plt.xlabel('x')
plt.ylabel('y')
plt.title('Box Plot of x vs y')
plt.show()

# 7. Scatter plot matrix
plt.figure(figsize=(10, 6))
pd.plotting.scatter_matrix(df, figsize=(10, 6))
plt.title('Scatter Plot Matrix')
plt.show()

# 8. Bar plot of mean of y for each x
plt.figure(figsize=(10, 6))
df.groupby('x')['y'].mean().plot(kind='bar')
plt.xlabel('x')
plt.ylabel('Mean of y')
plt.title('Bar Plot of Mean of y for each x')
plt.show()

# 9. Violin plot of y for each x
plt.figure(figsize=(10, 6))
sns.violinplot(x='x', y='y', data=df)
plt.xlabel('x')
plt.ylabel('y')
plt.title('Violin Plot of y for each x')
plt.show()